substitutions:
  _REGION: us-west1
  _FUNC_NAME: fetchEventBlocks
  _ENTRY: fetchEventBlocks
  _RUNTIME: nodejs20
  _TIMEOUT: 30s
  _MEMORY: 256Mi
  # Non-secrets here:
  _ENVS: >
    --set-env-vars=AIRTABLE_BASE_ID=app1L7NbGnRnRZ8UD,TIMEZONE=America/Los_Angeles
  # Secrets here:
  _SECRETS: >
    --set-secrets=AIRTABLE_TOKEN=projects/$PROJECT_ID/secrets/AIRTABLE_TOKEN:latest

steps:
  # Deploy (Gen 2)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        gcloud functions deploy ${_FUNC_NAME} \
          --gen2 \
          --region=${_REGION} \
          --runtime=${_RUNTIME} \
          --entry-point=${_ENTRY} \
          --trigger-http \
          --allow-unauthenticated \
          ${_ENVS} \
          ${_SECRETS} \
          --timeout=${_TIMEOUT} \
          --memory=${_MEMORY} \
          --quiet

  # Fetch & print the URL; fail if missing
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: "Print function URL"
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        URL="$$(gcloud functions describe ${_FUNC_NAME} --gen2 --region=${_REGION} --format='value(serviceConfig.uri)')"
        if [[ -z "$$URL" ]]; then
          echo "ERROR: Function URL is empty; deploy likely failed or is still provisioning."
          exit 1
        fi
        echo "FUNCTION_URL=$$URL"

  # (Optional) quick smoke test: HEAD request to confirm it answers
  # - name: curlimages/curl:8.10.1
  #   id: "Smoke test"
  #   entrypoint: sh
  #   args:
  #     - -lc
  #     - |
  #       set -eu
  #       URL="$$(gcloud functions describe ${_FUNC_NAME} --gen2 --region=${_REGION} --format='value(serviceConfig.uri)')"
  #       echo "Pinging $$URL"
  #       curl -I --max-time 20 "$$URL"

options:
  logging: CLOUD_LOGGING_ONLY
